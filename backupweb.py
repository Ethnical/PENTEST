# -*- coding: utf-8 -*-
import urllib2
 
#On établit une liste d'extensions correspondants à des fichiers de backup
list2 = ["3",'.txt', '.tar.gz', '.sav', '.bkp', '.orig', '.back', '.copy', '.bck', '~',".7z",".bac",".backup",".bak",".BAK",".bd",".BD",".bk",".BK",".bz2",".cfg~",".conf~",".config~",".configuration~",".db",".dmp",".dump",".gz",".gzip",".old",".Old",".OLD",".php~",".rar",".RAR",".save",".sql",".SQL",".sql_data",".swp",".tar",".tmp",".trn",".xz",".zip",".Zip",".ZIP"]
name = ["login","index","gestion","head","mesfonction","date","info","login"]
 
#On souhaite trouver les backups du fichier 'index'
fichier ="index"
f = open("success.txt", "w")
#On spécifie notre hote en dur
hote = "http://example.com"
i = 0 
#On parcours chaque extension possible
for file in name:
    for item in list2:
        try:
                #On construit la chaine 'url' qui correspond à l'url du ficher + extension à tester
                url = hote + "" + file + ".php" + item
                print(url)
                #On établit une connexion

                result=urllib2.urlopen(url,timeout=0.1)
                win = url + " Code : "+str(result.getcode())
                print(win)
                f.write(win)

        #Permet de gérer les erreurs 404 lors de la connexion
        except urllib2.HTTPError as e:
                if e.code == 404:
                    i= 0               #print file + "" + ".php" + item
                else:
                    i=0
                    #print file + "" + ".php" + item


print("FINSIH !")
f.close()